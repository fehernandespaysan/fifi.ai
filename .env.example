# Fifi.ai Environment Variables
# Copy this file to .env and fill in your actual values
# NEVER commit .env to version control!

# =============================================================================
# Environment Configuration
# =============================================================================
ENVIRONMENT=development  # Options: development, staging, production

# =============================================================================
# OpenAI API Configuration
# =============================================================================
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-api-key-here

# Model Configuration (optional - defaults provided)
# OPENAI_MODEL=gpt-4o-mini  # Options: gpt-4o, gpt-4o-mini
# OPENAI_EMBEDDING_MODEL=text-embedding-3-small  # Options: text-embedding-3-small, text-embedding-3-large

# =============================================================================
# Application Configuration
# =============================================================================
# Application Settings
APP_NAME=Fifi.ai
APP_VERSION=0.1.0
DEBUG=true  # Set to false in production

# =============================================================================
# Branding & Customization
# =============================================================================
# CUSTOMIZE THESE to brand the chatbot as your own!
APP_TAGLINE="Your AI Engineering Assistant"
WELCOME_TITLE="Welcome to Fifi"
WELCOME_MESSAGE="Your AI assistant powered by RAG. Ask me anything about AI, machine learning, embeddings, or software engineering."

# Example Questions (shown on welcome screen)
# These are comma-separated. Feel free to customize!
EXAMPLE_QUESTION_1="What is RAG and how does it work?"
EXAMPLE_QUESTION_2="How do vector databases improve search?"
EXAMPLE_QUESTION_3="Explain embeddings in simple terms"
EXAMPLE_QUESTION_4="What are best practices for AI security?"

# =============================================================================
# Logging Configuration
# =============================================================================
LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=json  # Options: json, text

# =============================================================================
# Vector Database Configuration
# =============================================================================
# FAISS Index Settings
FAISS_INDEX_PATH=data/faiss_index.faiss
FAISS_METADATA_PATH=data/faiss_metadata.pkl

# Vector Search Settings
VECTOR_SEARCH_TOP_K=5  # Number of chunks to retrieve
CHUNK_SIZE=500  # Size of text chunks in tokens
CHUNK_OVERLAP=50  # Overlap between chunks in tokens

# =============================================================================
# Blog Content Configuration
# =============================================================================
BLOGS_DIRECTORY=blogs/
BLOG_EXTENSIONS=.md,.markdown  # Supported file extensions

# =============================================================================
# API Configuration (FastAPI)
# =============================================================================
# API Settings
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=true  # Auto-reload on code changes (development only)

# CORS Settings
CORS_ORIGINS=http://localhost:3000,http://localhost:8501  # Comma-separated list
CORS_ALLOW_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=10
RATE_LIMIT_REQUESTS_PER_DAY=100

# =============================================================================
# Performance & Caching
# =============================================================================
# Cache Settings
CACHE_ENABLED=true
CACHE_TTL_SECONDS=300  # 5 minutes

# Request Timeout
REQUEST_TIMEOUT_SECONDS=30

# =============================================================================
# Monitoring & Observability
# =============================================================================
# Enable telemetry and metrics
ENABLE_METRICS=true
METRICS_PORT=9090

# Sentry Error Tracking (optional)
# SENTRY_DSN=your-sentry-dsn-here
# SENTRY_ENVIRONMENT=development

# =============================================================================
# Testing Configuration
# =============================================================================
# Test Settings (used during pytest)
TEST_MODE=false
MOCK_OPENAI_API=false  # Set to true to mock API calls in tests

# =============================================================================
# Security
# =============================================================================
# Secret key for session management
# IMPORTANT: Generate a secure key with: python -c "import secrets; print(secrets.token_urlsafe(32))"
# Replace the value below with your generated key!
SECRET_KEY=GENERATE-A-SECURE-KEY-WITH-THE-COMMAND-ABOVE

# API Key for authenticated endpoints (optional)
# API_KEY=your-api-key-for-protected-endpoints

# =============================================================================
# Development Tools
# =============================================================================
# Auto-reload settings
WATCHFILES_FORCE_POLLING=false

# Pretty print JSON responses
JSON_PRETTY_PRINT=true
